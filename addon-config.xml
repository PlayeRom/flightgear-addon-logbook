<?xml version="1.0"?>
<!--
#
# Logbook - Add-on for FlightGear
#
# Written and developer by Roman Ludwicki (PlayeRom, SP-ROM)
#
# Copyright (C) 2022 Roman Ludwicki
#
# Logbook is an Open Source project and it is licensed
# under the GNU Public License v3 (GPLv3)
#
-->

<PropertyList>
    <addons>
        <by-id>
            <org.flightgear.addons.logbook>
                <addon-devel>
                    <save>
                        <settings>
                            <dark-style type="bool">false</dark-style>
                            <real-time-duration type="bool">true</real-time-duration>
                            <sound-enabled type="bool">true</sound-enabled>
                            <!-- possible value for date-time-display: real, sim-utc, sim-local -->
                            <date-time-display type="string">real</date-time-display>
                            <log-items-per-page type="int">20</log-items-per-page>

                            <columns-visible>
                                <!-- Which columns should be displayed: -->
                                <variant type="bool">true</variant>
                                <aircraft_type type="bool">true</aircraft_type>
                                <callsign type="bool">true</callsign>
                                <from type="bool">true</from>
                                <to type="bool">true</to>
                                <landing type="bool">true</landing>
                                <crash type="bool">true</crash>
                                <day type="bool">true</day>
                                <night type="bool">true</night>
                                <instrument type="bool">true</instrument>
                                <multiplayer type="bool">true</multiplayer>
                                <swift type="bool">true</swift>
                                <duration type="bool">true</duration>
                                <distance type="bool">true</distance>
                                <fuel type="bool">true</fuel>
                                <max_alt type="bool">true</max_alt>
                            </columns-visible>
                        </settings>
                    </save>

                    <!-- This flag is set on true after edit logbook. Then listener is triggered and reload the logbook data.-->
                    <reload-logbook type="bool">false</reload-logbook>
                    <!-- This flag is using together with <reload-logbook> and indicate that user removed entry log -->
                    <logbook-entry-deleted type="bool">false</logbook-entry-deleted>

                    <!-- Trigger action on delete entry -->
                    <action-delete-entry type="bool">false</action-delete-entry>
                    <action-delete-entry-index type="int">0</action-delete-entry-index>

                    <!-- Trigger action on edit entry -->
                    <action-edit-entry type="bool">false</action-edit-entry>
                    <action-edit-entry-index type="int">0</action-edit-entry-index>
                    <action-edit-entry-column-name type="string"></action-edit-entry-column-name>
                    <action-edit-entry-value type="string"></action-edit-entry-value>

                    <help-text>
                        <paragraph type="string">
Logbook file
                        </paragraph>
                        <paragraph type="string">
This add-on automatically maintains a flight log, saving each flight to a CSV file or to a SQLite database. It doesn't require any interference, just add an add-on to FlightGear.

For FlightGear version 2024.1 and later, the logbook is saved to a database file `logbook.sqlite`. For older versions, up to 2020.3, it is a `logbook-v%s.csv` file.

You can find these files in the `$FG_HOME/Export/Addons/org.flightgear.addons.logbook/` directory, where `$FG_HOME` on Windows is:

`C:\Users\{user name}\AppData\Roaming\flightgear.org\`

on macOS:

`/Users/{user name}/Library/Application Support/FlightGear/`

on Linux:

`/home/{user name}/.fgfs/`.
                        </paragraph>
                        <paragraph type="string">
Data structure
                        </paragraph>
                        <paragraph type="string">
The following information is logged into the file:

1. Real date - aircraft take-off date. This is the date taken from your OS, not the date in the simulator. This date is displayed in the GUI as default. In the settings you can choose what date and time you want to display in the Logbook window,

2. Real time - aircraft take-off time. As with "Real date" this is the time taken from your OS. This time is displayed in the GUI as default. In the settings you can choose what date and time you want to display in the Logbook window.

3. Sim UTC date - aircraft take-off date as UTC time in simulator. This date is available only in version with SQLite (2024.1+).

4. Sim UTC time - aircraft take-off time as UTC time in simulator. This time is available only in version with SQLite (2024.1+).

5. Sim local date - aircraft take-off date as local time in simulator. This date is available only in version with SQLite (2024.1+).

6. Sim local time - aircraft take-off time as local time in simulator. This time is available only in version with SQLite (2024.1+).

7. Aircraft - the code name of the aircraft.

8. Variant - the code name of the aircraft as its variant. Some aircraft are available in several variants, such as the default "Cessna 172P", which includes different variants like "Cessna 172P Float". If you select "Cessna 172P," you will see `c172p` in the Aircraft as well as Variant column. If you select the float variant ("Cessna 172P Float"), you will see `c172p` in the Aircraft column, but `c172p-float` in the Variant column. This way you have the main group of aircraft in the Aircraft column, and its variants in the Variant column. This will allow you to extract Totals statistics for a general group of aircraft no matter what variant (filtering by Aircraft), as well as more precisely for a specific variant of a given aircraft (filtering by Variant).

9. Type - aircraft type as a one of following value:
    - "heli" (helicopter),
    - "balloon" (also airship),
    - "space" (space ship),
    - "seaplane" (also amphibious),
    - "military",
    - "glider",
    - "turboprop",
    - "bizjet",
    - "airliner",
    - "ga-single" (small piston single-engine general aviation),
    - "ga-multi" (small piston multi-engine general aviation),
    - "others" (undefined or not recognized).

10. Callsign - your callsign set for multiplayer.

11. From - the ICAO code of the airport from which you have taken off. If you are starting immediately in the air, this field will remain blank.

12. To - the ICAO code of the airport where you landed. If you did not land (e.g. by closing FG in flight) or by landing at an adventurous location, this field will remain blank.

13. Landing - if you landed anywhere, a 1 will be entered here. If the flight ended without landing or the add-on was unable to detect a valid landing, a 0 will be entered here.

14. Crash - if the add-on recognizes an aircraft crash, a 1 will be entered here, otherwise this field will be left blank.

15. Day - the number of hours spent flying during the day.

16. Night - number of hours spent flying during the night.

17. Instrument - the number of hours flown during the IMC (Instrument Meteorological Conditions).

18. Multiplayer - the number of flight hours when connecting to a multiplayer server.

19. Swift - number of flight hours when connecting to swift.

20. Duration - total duration of the flight in hours, as the sum of Day and Night. The Instrument is not added up here, as it is simply counted separately, regardless of whether it was day or night. Duration is calculated in real time, so if you speed up or slow down the simulation time, it will not be affected.

21. Distance - total distance flown from take-off to landing, in nautical miles.

22. Fuel - total amount of fuel burned in flight, in U.S. gallons.

23. Max Alt - maximum altitude, in feet, reached during flight.

24. Note - notes, by default the full name of the aircraft.
                        </paragraph>
                        <paragraph type="string">
Totals
                        </paragraph>
                        <paragraph type="string">
The last row signed "Totals", contains a summary, not only of the visible entries on a given page, but of the entire logbook. The same "Totals" row is visible on every page. The exception for totals is the `Max Alt` column, in which you don't have the sum of all altitudes, but the highest one.

After using the filter, the "Totals" row will also be updated with the filtered data. In this way, you can see statistics for a specific aircraft or types of aircraft.
                        </paragraph>
                        <paragraph type="string">
Note
                        </paragraph>
                        <paragraph type="string">
1. If you properly close the simulator during the flight ("File" -> "Exit"), the current flight status will be saved to the logbook (without landing information, of course).

2. If the simulator will be closed incorrectly during flight, e.g. via the [X] button on the window bar, or a crash occurs, the logbook data should be saved in the recovery.csv file. The data in the recovery.csv file will be automatically transferred to the logbook.csv file when the simulator is restarted. For version 2024.1 and later, the data is always, cyclically written directly to the SQLite database, so the recovery.csv file is redundant. Data for recovery mode is saved every 60 seconds.

3. For the add-on to count as a landing, the aircraft must rest on all wheels and maintain this state for at least 3 seconds. In this way, an ugly bounce off the runway will not be counted as a landing.

4. If you start a simulation in the air, the add-on will recognize this and start logging without waiting for take-off.

5. If you start a simulation in the air, the add-on is unable to recognize the landing gear, so the landing pass will extend to 6 seconds (giving an extra 3 seconds to make sure the aircraft is resting on all wheels).

6. Helicopters should also be supported, although I have not tested all of them.

7. The add-on supports JSBSim-based watercraft, although I have not tested all of them.

8. The add-on supports the Space Shuttle.

9. Flights with UFO will not be logged.

10. Pausing the simulation or turning on the replay mode stops the flight statistics from being added to the log.

11. As for fuel burn, the add-on does not take into account the change in the amount of fuel during the flight. When you change the amount of fuel during the flight, the result in the Fuel column will be incorrect. So try to avoid it and refuel the aircraft before the flight.

12. Supported FG versions from 2020.1.

13. The minimum resolution for using the GUI is 1366x768.
                        </paragraph>
                    </help-text>
                </addon-devel>
            </org.flightgear.addons.logbook>
        </by-id>
    </addons>
</PropertyList>
